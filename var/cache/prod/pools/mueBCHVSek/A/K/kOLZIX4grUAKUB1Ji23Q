0
%255BTrikoder%255CBundle%255COAuth2Bundle%255CModel%255CAuthorizationCode%2524CLASSMETADATA%255D%255B1%255D
O:34:"Doctrine\ORM\Mapping\ClassMetadata":12:{s:19:"associationMappings";a:1:{s:6:"client";a:19:{s:9:"fieldName";s:6:"client";s:12:"targetEntity";s:41:"Trikoder\Bundle\OAuth2Bundle\Model\Client";s:11:"joinColumns";a:1:{i:0;a:3:{s:4:"name";s:6:"client";s:20:"referencedColumnName";s:10:"identifier";s:8:"nullable";b:0;}}s:4:"type";i:2;s:8:"mappedBy";N;s:10:"inversedBy";N;s:12:"isOwningSide";b:1;s:12:"sourceEntity";s:52:"Trikoder\Bundle\OAuth2Bundle\Model\AuthorizationCode";s:5:"fetch";i:2;s:7:"cascade";a:0:{}s:15:"isCascadeRemove";b:0;s:16:"isCascadePersist";b:0;s:16:"isCascadeRefresh";b:0;s:14:"isCascadeMerge";b:0;s:15:"isCascadeDetach";b:0;s:24:"sourceToTargetKeyColumns";a:1:{s:6:"client";s:10:"identifier";}s:20:"joinColumnFieldNames";a:1:{s:6:"client";s:6:"client";}s:24:"targetToSourceKeyColumns";a:1:{s:10:"identifier";s:6:"client";}s:13:"orphanRemoval";b:0;}}s:11:"columnNames";a:5:{s:6:"expiry";s:6:"expiry";s:14:"userIdentifier";s:15:"user_identifier";s:6:"scopes";s:6:"scopes";s:7:"revoked";s:7:"revoked";s:10:"identifier";s:10:"identifier";}s:13:"fieldMappings";a:5:{s:6:"expiry";a:3:{s:9:"fieldName";s:6:"expiry";s:4:"type";s:8:"datetime";s:10:"columnName";s:6:"expiry";}s:14:"userIdentifier";a:5:{s:9:"fieldName";s:14:"userIdentifier";s:4:"type";s:6:"string";s:6:"length";i:128;s:8:"nullable";b:1;s:10:"columnName";s:15:"user_identifier";}s:6:"scopes";a:4:{s:9:"fieldName";s:6:"scopes";s:4:"type";s:12:"oauth2_scope";s:8:"nullable";b:1;s:10:"columnName";s:6:"scopes";}s:7:"revoked";a:3:{s:9:"fieldName";s:7:"revoked";s:4:"type";s:7:"boolean";s:10:"columnName";s:7:"revoked";}s:10:"identifier";a:6:{s:2:"id";b:1;s:9:"fieldName";s:10:"identifier";s:4:"type";s:6:"string";s:6:"length";s:2:"80";s:7:"options";a:1:{s:5:"fixed";b:1;}s:10:"columnName";s:10:"identifier";}}s:10:"fieldNames";a:5:{s:6:"expiry";s:6:"expiry";s:15:"user_identifier";s:14:"userIdentifier";s:6:"scopes";s:6:"scopes";s:7:"revoked";s:7:"revoked";s:10:"identifier";s:10:"identifier";}s:15:"embeddedClasses";a:0:{}s:10:"identifier";a:1:{i:0;s:10:"identifier";}s:21:"isIdentifierComposite";b:0;s:4:"name";s:52:"Trikoder\Bundle\OAuth2Bundle\Model\AuthorizationCode";s:9:"namespace";s:34:"Trikoder\Bundle\OAuth2Bundle\Model";s:5:"table";a:1:{s:4:"name";s:25:"oauth2_authorization_code";}s:14:"rootEntityName";s:52:"Trikoder\Bundle\OAuth2Bundle\Model\AuthorizationCode";s:11:"idGenerator";O:33:"Doctrine\ORM\Id\AssignedGenerator":0:{}}